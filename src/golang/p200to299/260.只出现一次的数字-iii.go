package p200to299

/*
 * @lc app=leetcode.cn id=260 lang=golang
 *
 * [260] 只出现一次的数字 III
 *
 * https://leetcode-cn.com/problems/single-number-iii/description/
 *
 * algorithms
 * Medium (72.70%)
 * Likes:    466
 * Dislikes: 0
 * Total Accepted:    55.9K
 * Total Submissions: 77K
 * Testcase Example:  '[1,2,1,3,2,5]'
 *
 * 给定一个整数数组 nums，其中恰好有两个元素只出现一次，其余所有元素均出现两次。 找出只出现一次的那两个元素。你可以按 任意顺序 返回答案。
 *
 *
 *
 * 进阶：你的算法应该具有线性时间复杂度。你能否仅使用常数空间复杂度来实现？
 *
 *
 *
 * 示例 1：
 *
 *
 * 输入：nums = [1,2,1,3,2,5]
 * 输出：[3,5]
 * 解释：[5, 3] 也是有效的答案。
 *
 *
 * 示例 2：
 *
 *
 * 输入：nums = [-1,0]
 * 输出：[-1,0]
 *
 *
 * 示例 3：
 *
 *
 * 输入：nums = [0,1]
 * 输出：[1,0]
 *
 *
 * 提示：
 *
 *
 * 2 <= nums.length <= 3 * 10^4
 * -2^31 <= nums[i] <= 2^31 - 1
 * 除两个只出现一次的整数外，nums 中的其他数字都出现两次
 *
 *
 */

/**
 * @File    :   260.只出现一次的数字-iii.go
 * @Time    :   2021/10/30 09:20:56
 * @Author  :   wylu
 * @Version :   1.0
 * @Contact :   15wylu@gmail.com
 * @License :   Copyright © 2020, wylu-CHINA-SHENZHEN. All rights reserved.
 * @Desc    :
 * 思路：
 *
 * 异或运算的一个性质：任何一个数字异或它自己都等于 0
 *
 * 如果数组里只有一个数字出现 1 次，其它都出现偶数次，那么从头到尾异或数组中
 * 的每一个数字，最后将得到那个只出现一次的数字。所以解决问题的关键变成了如何
 * 把原数组分成两个子数组，使得每个子数组包含一个只出现一次的数字，而其它数字
 * 都出现偶数次。
 *
 * 并不需要额外的辅助空间保存两个子数组，这里只是在逻辑上进行划分而已。
 *
 * - 首先，从头到尾依次异或数组中的每一个数字，最终得到的结果就是那两个只出现
 *   一次的数字异或的结果。
 * - 因为这两个数字肯定不一样，那么异或的结果肯定不为 0，也就是说在这个结果
 *   数字的二进制表示中至少有一位为 1。
 * - 在结果数字中找到第一个为 1 的位置，记为第 n 位。
 * - 接着，以第 n 位是不是 1 为标准把原数组中的数字分成两个子数组，第一个
 *   子数组中每个数字的第 n 位都是 1，第二个子数组中每一个数字的第 n 位都是 0。
 *
 * 由于分组的标准是数字中的某一位是 1 还是 0，那么出现了偶数次的数字肯定被
 * 分配到同一个子数组。因为两个相同的数字的任意一位都是相同的。
 *
 * 例如：
 *
 * 假设输入数组 {2,4,3,6,3,2,5,5}，对数组中的每个数字异或运算后得到结果的
 * 二进制表示为 0010。
 *
 * 异或得到结果中的倒数第二位是 1，于是我们根据数字的倒数第二位是不是 1
 * 分为两个子数组。
 *
 * 第一个子数组 {2,3,6,3,2} 中所有数字的倒数第二位都是 1；而第二个子数组
 * {4,5,5} 中所有数字的倒数第二位都是 0。
 */

// @lc code=start
func singleNumber(nums []int) []int {
	xor := 0
	for _, num := range nums {
		xor ^= num
	}

	lsb := xor & -xor

	num1, num2 := 0, 0
	for _, num := range nums {
		if num&lsb == 0 {
			num1 ^= num
		} else {
			num2 ^= num
		}
	}
	return []int{num1, num2}
}

// @lc code=end
